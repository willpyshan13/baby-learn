<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.ICourseStageMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.CourseStageDO">
        insert into course_stage
        (
       	    `id`, `stage_name`, `level`, `description`, 
       	    `spend_time`, `course_count`, `origin_price`, `preferential_price`, 
       	    `sold_count`, `img_url`, `teacher_id`, `selling`, 
       	    `create_time`, `update_time`
        )
        values
        (
       	    #{id,jdbcType=BIGINT}, #{stageName,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
       	    #{spendTime,jdbcType=DOUBLE}, #{courseCount,jdbcType=INTEGER}, #{originPrice,jdbcType=DECIMAL}, #{preferentialPrice,jdbcType=DECIMAL}, 
       	    #{soldCount,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, #{teacherId,jdbcType=BIGINT}, #{selling,jdbcType=INTEGER}, 
       	    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.CourseStageDO">
        select
            cs.`id`, cs.`stage_name`, cs.`level`, cs.`description`,
            cs.`spend_time`, cs.`course_count`,
            cs.`sold_count`, cs.`img_url`, cs.`teacher_id`, cs.`selling`,
            cs.`create_time`, cs.`update_time`,
            t.teacher_name,
            convert(origin_price,decimal(38,2)) origin_price,
            convert(preferential_price,decimal(38,2)) preferential_price
        from course_stage cs
        LEFT JOIN teacher t ON t.teacher_id = cs.teacher_id
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryByLevel" parameterType="Long" resultType="cn.smart.entity.CourseStageDO">
        select
            cs.`id`, cs.`stage_name`, cs.`level`, cs.`description`,
            cs.`spend_time`, cs.`course_count`,
            cs.`sold_count`, cs.`img_url`, cs.`teacher_id`, cs.`selling`,
            cs.`create_time`, cs.`update_time`,
            t.teacher_name,
            convert(origin_price,decimal(38,2)) origin_price,
            convert(preferential_price,decimal(38,2)) preferential_price
        from course_stage cs
        LEFT JOIN teacher t ON t.teacher_id = cs.teacher_id
        where cs.level = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.CourseStageDO"
        parameterType="cn.smart.condition.CourseStageQueryCondition">
        select
            cs.id, cs.stage_name, cs.level, cs.description,
            cs.spend_time, cs.course_count,
            convert(origin_price,decimal(38,2)) origin_price,
            convert(preferential_price,decimal(38,2)) preferential_price,
            cs.sold_count, cs.img_url, cs.teacher_id, t.teacher_name, cs.create_time,
            cs.update_time, cs.`selling`
        from course_stage cs
        LEFT JOIN teacher t ON t.teacher_id = cs.teacher_id
        <where>
            <if test="classId != null">
                AND NOT EXISTS ( SELECT ci.stage_id FROM class_course cc LEFT JOIN course_info ci ON ci.id = cc.course_info_id where ci.stage_id = cs.id and cc.class_id = #{classId, jdbcType=BIGINT})
            </if>
            <if test="existsPersonId != null">
                and EXISTS ( SELECT pcs.course_stage_id FROM person_course_stage pcs WHERE pcs.course_stage_id = cs.id AND pcs.person_id = #{existsPersonId, jdbcType=BIGINT} )
            </if>
            <if test="notExistsPersonId != null">
                and not EXISTS ( SELECT pcs.course_stage_id FROM person_course_stage pcs WHERE pcs.course_stage_id = cs.id AND pcs.person_id = #{notExistsPersonId, jdbcType=BIGINT} )
            </if>
            <if test="id != null">
                and cs.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageName != null and stageName != '' ">
                and cs.stage_name = #{stageName,jdbcType=VARCHAR}
            </if>
            <if test="level != null">
                and cs.level = #{level,jdbcType=INTEGER}
            </if>
            <if test="description != null and description != '' ">
                and cs.description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="spendTime != null">
                and cs.spend_time = #{spendTime,jdbcType=DOUBLE}
            </if>
            <if test="courseCount != null">
                and cs.course_count = #{courseCount,jdbcType=INTEGER}
            </if>
            <if test="originPrice != null">
                and cs.origin_price = #{originPrice,jdbcType=DECIMAL}
            </if>
            <if test="preferentialPrice != null">
                and cs.preferential_price = #{preferentialPrice,jdbcType=DECIMAL}
            </if>
            <if test="soldCount != null">
                and cs.sold_count = #{soldCount,jdbcType=INTEGER}
            </if>
            <if test="imgUrl != null and imgUrl != '' ">
                and cs.img_url = #{imgUrl,jdbcType=VARCHAR}
            </if>
            <if test="teacherId != null">
                and cs.teacher_id = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="selling != null">
                and cs.`selling` = #{selling,jdbcType=INTEGER}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by cs.${orderField} ${order}
            </when>
            <otherwise>
                order by cs.id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.CourseStageQueryCondition">
        select count(1) as total from course_stage cs
        <where>
            <if test="classId != null">
                AND NOT EXISTS ( SELECT ci.stage_id FROM class_course cc LEFT JOIN course_info ci ON ci.id = cc.course_info_id where ci.stage_id = cs.id and cc.class_id = #{classId, jdbcType=BIGINT})
            </if>
            <if test="existsPersonId != null">
                and EXISTS ( SELECT pcs.course_stage_id FROM person_course_stage pcs WHERE pcs.course_stage_id = cs.id AND pcs.person_id = #{existsPersonId, jdbcType=BIGINT} )
            </if>
            <if test="notExistsPersonId != null">
                and not EXISTS ( SELECT pcs.course_stage_id FROM person_course_stage pcs WHERE pcs.course_stage_id = cs.id AND pcs.person_id = #{notExistsPersonId, jdbcType=BIGINT} )
            </if>
            <if test="id != null">
                and cs.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageName != null and stageName != '' ">
                and cs.stage_name = #{stageName,jdbcType=VARCHAR}
            </if>
            <if test="level != null">
                and cs.level = #{level,jdbcType=INTEGER}
            </if>
            <if test="description != null and description != '' ">
                and cs.description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="spendTime != null">
                and cs.spend_time = #{spendTime,jdbcType=DOUBLE}
            </if>
            <if test="courseCount != null">
                and cs.course_count = #{courseCount,jdbcType=INTEGER}
            </if>
            <if test="originPrice != null">
                and cs.origin_price = #{originPrice,jdbcType=DECIMAL}
            </if>
            <if test="preferentialPrice != null">
                and cs.preferential_price = #{preferentialPrice,jdbcType=DECIMAL}
            </if>
            <if test="soldCount != null">
                and cs.sold_count = #{soldCount,jdbcType=INTEGER}
            </if>
            <if test="imgUrl != null and imgUrl != '' ">
                and cs.img_url = #{imgUrl,jdbcType=VARCHAR}
            </if>
            <if test="teacherId != null">
                and cs.teacher_id = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="selling != null">
                and cs.`selling` = #{selling,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from course_stage
    </select>

    <update id="update" parameterType="cn.smart.entity.CourseStageDO">
        update course_stage
        <set>
            <if test="stageName != null">
                `stage_name` = #{stageName,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                `level` = #{level,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                `description` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="spendTime != null">
                `spend_time` = #{spendTime,jdbcType=DOUBLE},
            </if>
            <if test="courseCount != null">
                `course_count` = #{courseCount,jdbcType=INTEGER},
            </if>
            <if test="originPrice != null">
                `origin_price` = #{originPrice,jdbcType=DECIMAL},
            </if>
            <if test="preferentialPrice != null">
                `preferential_price` = #{preferentialPrice,jdbcType=DECIMAL},
            </if>
            <if test="soldCount != null">
                `sold_count` = #{soldCount,jdbcType=INTEGER},
            </if>
            <if test="imgUrl != null">
                `img_url` = #{imgUrl,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                `teacher_id` = #{teacherId,jdbcType=BIGINT},
            </if>
            <if test="selling != null">
                `selling` = #{selling,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from course_stage
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageName != null and stageName != '' ">
                and `stage_name` = #{stageName,jdbcType=VARCHAR}
            </if>
            <if test="level != null">
                and `level` = #{level,jdbcType=INTEGER}
            </if>
            <if test="description != null and description != '' ">
                and `description` = #{description,jdbcType=VARCHAR}
            </if>
            <if test="spendTime != null">
                and `spend_time` = #{spendTime,jdbcType=DOUBLE}
            </if>
            <if test="courseCount != null">
                and `course_count` = #{courseCount,jdbcType=INTEGER}
            </if>
            <if test="originPrice != null">
                and `origin_price` = #{originPrice,jdbcType=DECIMAL}
            </if>
            <if test="preferentialPrice != null">
                and `preferential_price` = #{preferentialPrice,jdbcType=DECIMAL}
            </if>
            <if test="soldCount != null">
                and `sold_count` = #{soldCount,jdbcType=INTEGER}
            </if>
            <if test="imgUrl != null and imgUrl != '' ">
                and `img_url` = #{imgUrl,jdbcType=VARCHAR}
            </if>
            <if test="teacherId != null">
                and `teacher_id` = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="selling != null">
                and `selling` = #{selling,jdbcType=INTEGER}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from course_stage where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from course_stage where id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>