<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.IClockRecordMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.ClockRecordDO">
        insert into clock_record
        (
       	    `id`, `person_id`, `init_date`, `clock_date`, 
       	    `clock_time`, `sum`, `max_count`, `update_time`
        )
        values
        (
       	    #{id,jdbcType=INTEGER}, #{personId,jdbcType=BIGINT}, #{initDate,jdbcType=DATE}, #{clockDate,jdbcType=DATE}, 
       	    #{clockTime,jdbcType=TIMESTAMP}, #{sum,jdbcType=INTEGER}, #{maxCount,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryByPersonId" parameterType="Long" resultType="cn.smart.entity.ClockRecordDO">
        select
            `id`, `person_id`, `init_date`, `clock_date`,
            `clock_time`, `sum`, `max_count`, `update_time`
        from clock_record
        where person_id = #{personId,jdbcType=INTEGER}
    </select>


    <select id="queryById" parameterType="Integer" resultType="cn.smart.entity.ClockRecordDO">
        select
                `id`, `person_id`, `init_date`, `clock_date`, 
                `clock_time`, `sum`, `max_count`, `update_time`
        from clock_record
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryList" resultType="cn.smart.entity.ClockRecordDO"
        parameterType="cn.smart.condition.ClockRecordQueryCondition">
        select
       	    `id`, `person_id`, `init_date`, `clock_date`, 
       	    `clock_time`, `sum`, `max_count`, `update_time`
        from clock_record
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="initDate != null">
                and `init_date` = #{initDate,jdbcType=DATE}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="clockTime != null">
                and `clock_time` = #{clockTime,jdbcType=TIMESTAMP}
            </if>
            <if test="sum != null">
                and `sum` = #{sum,jdbcType=INTEGER}
            </if>
            <if test="maxCount != null">
                and `max_count` = #{maxCount,jdbcType=INTEGER}
            </if>
            <if test="updateTime != null">
                and `update_time` = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.ClockRecordQueryCondition">
        select count(1) as total from clock_record
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="initDate != null">
                and `init_date` = #{initDate,jdbcType=DATE}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="clockTime != null">
                and `clock_time` = #{clockTime,jdbcType=TIMESTAMP}
            </if>
            <if test="sum != null">
                and `sum` = #{sum,jdbcType=INTEGER}
            </if>
            <if test="maxCount != null">
                and `max_count` = #{maxCount,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from clock_record
    </select>

    <update id="update" parameterType="cn.smart.entity.ClockRecordDO">
        update clock_record
        <set>
            <if test="personId != null">
                `person_id` = #{personId,jdbcType=BIGINT},
            </if>
            <if test="initDate != null">
                `init_date` = #{initDate,jdbcType=DATE},
            </if>
            <if test="clockDate != null">
                `clock_date` = #{clockDate,jdbcType=DATE},
            </if>
            <if test="clockTime != null">
                `clock_time` = #{clockTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sum != null">
                `sum` = #{sum,jdbcType=INTEGER},
            </if>
            <if test="maxCount != null">
                `max_count` = #{maxCount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="delete">
        delete from clock_record
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="initDate != null">
                and `init_date` = #{initDate,jdbcType=DATE}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="sum != null">
                and `sum` = #{sum,jdbcType=INTEGER}
            </if>
            <if test="maxCount != null">
                and `max_count` = #{maxCount,jdbcType=INTEGER}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from clock_record where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Integer">
        delete from clock_record where id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>