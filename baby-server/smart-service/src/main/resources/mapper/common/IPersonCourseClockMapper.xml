<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.IPersonCourseClockMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.PersonCourseClockDO">
        insert into person_course_clock
        (
       	    `id`, `stage_id`, `group_id`, `course_id`, 
       	    `person_id`, `clock_date`, `points`, `create_by`, 
       	    `create_time`, `update_by`, `update_time`
        )
        values
        (
       	    #{id,jdbcType=BIGINT}, #{stageId,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, 
       	    #{personId,jdbcType=BIGINT}, #{clockDate,jdbcType=DATE}, #{points,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT}, 
       	    #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.PersonCourseClockDO">
        select
                `id`, `stage_id`, `group_id`, `course_id`, 
                `person_id`, `clock_date`, `points`, `create_by`, 
                `create_time`, `update_by`, `update_time`
        from person_course_clock
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.PersonCourseClockDO"
        parameterType="cn.smart.condition.PersonCourseClockQueryCondition">
        select
       	    `id`, `stage_id`, `group_id`, `course_id`, 
       	    `person_id`, `clock_date`, `points`, `create_by`, 
       	    `create_time`, `update_by`, `update_time`
        from person_course_clock
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageId != null">
                and `stage_id` = #{stageId,jdbcType=BIGINT}
            </if>
            <if test="groupId != null">
                and `group_id` = #{groupId,jdbcType=BIGINT}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="points != null">
                and `points` = #{points,jdbcType=INTEGER}
            </if>
            <if test="createBy != null">
                and `create_by` = #{createBy,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateBy != null">
                and `update_by` = #{updateBy,jdbcType=BIGINT}
            </if>
            <if test="updateTime != null">
                and `update_time` = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.PersonCourseClockQueryCondition">
        select count(1) as total from person_course_clock
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageId != null">
                and `stage_id` = #{stageId,jdbcType=BIGINT}
            </if>
            <if test="groupId != null">
                and `group_id` = #{groupId,jdbcType=BIGINT}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="points != null">
                and `points` = #{points,jdbcType=INTEGER}
            </if>
            <if test="createBy != null">
                and `create_by` = #{createBy,jdbcType=BIGINT}
            </if>
            <if test="updateBy != null">
                and `update_by` = #{updateBy,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from person_course_clock
    </select>

    <update id="update" parameterType="cn.smart.entity.PersonCourseClockDO">
        update person_course_clock
        <set>
            <if test="stageId != null">
                `stage_id` = #{stageId,jdbcType=BIGINT},
            </if>
            <if test="groupId != null">
                `group_id` = #{groupId,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                `course_id` = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="personId != null">
                `person_id` = #{personId,jdbcType=BIGINT},
            </if>
            <if test="clockDate != null">
                `clock_date` = #{clockDate,jdbcType=DATE},
            </if>
            <if test="points != null">
                `points` = #{points,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                `create_by` = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                `update_by` = #{updateBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateAll" parameterType="cn.smart.entity.PersonCourseClockDO">
        update person_course_clock SET
            `stage_id` = #{stageId,jdbcType=BIGINT},
            `group_id` = #{groupId,jdbcType=BIGINT},
            `course_id` = #{courseId,jdbcType=BIGINT},
            `person_id` = #{personId,jdbcType=BIGINT},
            `clock_date` = #{clockDate,jdbcType=DATE},
            `points` = #{points,jdbcType=INTEGER},
            `create_by` = #{createBy,jdbcType=BIGINT},
            `update_by` = #{updateBy,jdbcType=BIGINT},
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from person_course_clock
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="stageId != null">
                and `stage_id` = #{stageId,jdbcType=BIGINT}
            </if>
            <if test="groupId != null">
                and `group_id` = #{groupId,jdbcType=BIGINT}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="clockDate != null">
                and `clock_date` = #{clockDate,jdbcType=DATE}
            </if>
            <if test="points != null">
                and `points` = #{points,jdbcType=INTEGER}
            </if>
            <if test="createBy != null">
                and `create_by` = #{createBy,jdbcType=BIGINT}
            </if>
            <if test="updateBy != null">
                and `update_by` = #{updateBy,jdbcType=BIGINT}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from person_course_clock where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from person_course_clock where id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>