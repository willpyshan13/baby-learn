<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.IClassPersonMapper">


    <delete id="deleteByClassId" parameterType="Long">
        delete from class_person where class_id = #{classId,jdbcType=BIGINT}
    </delete>


    <insert id="saveBatch" parameterType="List">
        INSERT INTO class_person (class_id, person_id, create_time) VALUES
        <foreach collection="list" item="item" index="index" open="" separator="," close="">
            (#{item.classId,jdbcType=BIGINT}, #{item.personId,jdbcType=BIGINT}, now())
        </foreach>
    </insert>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.ClassPersonDO">
        insert into class_person
        (
       	    `id`, `class_id`, `person_id`, `create_time`, 
       	    `update_time`
        )
        values
        (
       	    #{id,jdbcType=INTEGER}, #{classId,jdbcType=BIGINT}, #{personId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
       	    #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Integer" resultType="cn.smart.entity.ClassPersonDO">
        select
                `id`, `class_id`, `person_id`, `create_time`, 
                `update_time`
        from class_person
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryList" resultType="cn.smart.entity.ClassPersonDO"
        parameterType="cn.smart.condition.ClassPersonQueryCondition">
        select
          cp.`id`, cp.`class_id`, cp.`person_id`, cp.`create_time`, cp.`update_time`,
          ci.course_stage_id
        from class_person cp
        LEFT JOIN class_info ci ON ci.id = cp.class_id
        <where>
            <if test="id != null">
                and cp.`id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="classId != null">
                and cp.`class_id` = #{classId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and cp.`person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and cp.`create_time` = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and cp.`update_time` = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="existsPersonId != null">
                and cp.person_id IN
                <foreach item="id" collection="existsPersonId" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.ClassPersonQueryCondition">
        select count(1) as total from class_person
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="classId != null">
                and `class_id` = #{classId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
            <if test="existsPersonId != null">
                and person_id IN
                <foreach item="id" collection="existsPersonId" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from class_person
    </select>

    <update id="update" parameterType="cn.smart.entity.ClassPersonDO">
        update class_person
        <set>
            <if test="classId != null">
                `class_id` = #{classId,jdbcType=BIGINT},
            </if>
            <if test="personId != null">
                `person_id` = #{personId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="delete">
        delete from class_person
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=INTEGER}
            </if>
            <if test="classId != null">
                and `class_id` = #{classId,jdbcType=BIGINT}
            </if>
            <if test="personId != null">
                and `person_id` = #{personId,jdbcType=BIGINT}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from class_person where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Integer">
        delete from class_person where id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>