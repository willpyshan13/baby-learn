<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.IRecordingMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.RecordingDO">
        insert into recording
        (
       	    `id`, `room_id`, `title`, `play_path`, 
       	    `https_play_path`, `record_path`, `duration`, `size`, 
       	    `record_date`, `create_time`, `course_id`
        )
        values
        (
       	    #{id,jdbcType=BIGINT}, #{roomId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{playPath,jdbcType=VARCHAR}, 
       	    #{httpsPlayPath,jdbcType=VARCHAR}, #{recordPath,jdbcType=VARCHAR}, #{duration,jdbcType=DOUBLE}, #{size,jdbcType=DOUBLE}, 
       	    #{recordDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{courseId,jdbcType=BIGINT}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.smart.entity.RecordingDO">
        insert into recording
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="roomId != null">
                `room_id`,
            </if>
            <if test="title != null">
                `title`,
            </if>
            <if test="playPath != null">
                `play_path`,
            </if>
            <if test="httpsPlayPath != null">
                `https_play_path`,
            </if>
            <if test="recordPath != null">
                `record_path`,
            </if>
            <if test="duration != null">
                `duration`,
            </if>
            <if test="size != null">
                `size`,
            </if>
            <if test="recordDate != null">
                `record_date`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
            <if test="courseId != null">
                `course_id`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT}, 
            </if>
            <if test="roomId != null">
                #{roomId,jdbcType=BIGINT}, 
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR}, 
            </if>
            <if test="playPath != null">
                #{playPath,jdbcType=VARCHAR}, 
            </if>
            <if test="httpsPlayPath != null">
                #{httpsPlayPath,jdbcType=VARCHAR}, 
            </if>
            <if test="recordPath != null">
                #{recordPath,jdbcType=VARCHAR}, 
            </if>
            <if test="duration != null">
                #{duration,jdbcType=DOUBLE}, 
            </if>
            <if test="size != null">
                #{size,jdbcType=DOUBLE}, 
            </if>
            <if test="recordDate != null">
                #{recordDate,jdbcType=DATE}, 
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP}, 
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT}
            </if>
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO recording
        (
            `id`, `room_id`, `title`, `play_path`, 
            `https_play_path`, `record_path`, `duration`, `size`, 
            `record_date`, `create_time`, `course_id`
        )
        VALUES
        <foreach collection="list" item="item" index="index" open="" separator="," close="">
            (
            #{item.id,jdbcType=BIGINT}, #{item.roomId,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR}, #{item.playPath,jdbcType=VARCHAR}, 
            #{item.httpsPlayPath,jdbcType=VARCHAR}, #{item.recordPath,jdbcType=VARCHAR}, #{item.duration,jdbcType=DOUBLE}, #{item.size,jdbcType=DOUBLE}, 
            #{item.recordDate,jdbcType=DATE}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.courseId,jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.RecordingDO">
        select
                `id`, `room_id`, `title`, `play_path`, 
                `https_play_path`, `record_path`, `duration`, `size`, 
                `record_date`, `create_time`, `course_id`
        from recording
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.RecordingDO"
        parameterType="cn.smart.condition.RecordingQueryCondition">
        select
       	    `id`, `room_id`, `title`, `play_path`, 
       	    `https_play_path`, `record_path`, `duration`, `size`, 
       	    `record_date`, `create_time`, `course_id`
        from recording
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="roomId != null">
                and `room_id` = #{roomId,jdbcType=BIGINT}
            </if>
            <if test="title != null and title != '' ">
                and `title` = #{title,jdbcType=VARCHAR}
            </if>
            <if test="playPath != null and playPath != '' ">
                and `play_path` = #{playPath,jdbcType=VARCHAR}
            </if>
            <if test="httpsPlayPath != null and httpsPlayPath != '' ">
                and `https_play_path` = #{httpsPlayPath,jdbcType=VARCHAR}
            </if>
            <if test="recordPath != null and recordPath != '' ">
                and `record_path` = #{recordPath,jdbcType=VARCHAR}
            </if>
            <if test="duration != null">
                and `duration` = #{duration,jdbcType=DOUBLE}
            </if>
            <if test="size != null">
                and `size` = #{size,jdbcType=DOUBLE}
            </if>
            <if test="recordDate != null">
                and `record_date` = #{recordDate,jdbcType=DATE}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.RecordingQueryCondition">
        select count(1) as total from recording
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="roomId != null">
                and `room_id` = #{roomId,jdbcType=BIGINT}
            </if>
            <if test="title != null and title != '' ">
                and `title` = #{title,jdbcType=VARCHAR}
            </if>
            <if test="playPath != null and playPath != '' ">
                and `play_path` = #{playPath,jdbcType=VARCHAR}
            </if>
            <if test="httpsPlayPath != null and httpsPlayPath != '' ">
                and `https_play_path` = #{httpsPlayPath,jdbcType=VARCHAR}
            </if>
            <if test="recordPath != null and recordPath != '' ">
                and `record_path` = #{recordPath,jdbcType=VARCHAR}
            </if>
            <if test="duration != null">
                and `duration` = #{duration,jdbcType=DOUBLE}
            </if>
            <if test="size != null">
                and `size` = #{size,jdbcType=DOUBLE}
            </if>
            <if test="recordDate != null">
                and `record_date` = #{recordDate,jdbcType=DATE}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from recording
    </select>

    <update id="update" parameterType="cn.smart.entity.RecordingDO">
        update recording
        <set>
            <if test="roomId != null">
                `room_id` = #{roomId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                `title` = #{title,jdbcType=VARCHAR},
            </if>
            <if test="playPath != null">
                `play_path` = #{playPath,jdbcType=VARCHAR},
            </if>
            <if test="httpsPlayPath != null">
                `https_play_path` = #{httpsPlayPath,jdbcType=VARCHAR},
            </if>
            <if test="recordPath != null">
                `record_path` = #{recordPath,jdbcType=VARCHAR},
            </if>
            <if test="duration != null">
                `duration` = #{duration,jdbcType=DOUBLE},
            </if>
            <if test="size != null">
                `size` = #{size,jdbcType=DOUBLE},
            </if>
            <if test="recordDate != null">
                `record_date` = #{recordDate,jdbcType=DATE},
            </if>
            <if test="courseId != null">
                `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateAll" parameterType="cn.smart.entity.RecordingDO">
        update recording SET
            `room_id` = #{roomId,jdbcType=BIGINT},
            `title` = #{title,jdbcType=VARCHAR},
            `play_path` = #{playPath,jdbcType=VARCHAR},
            `https_play_path` = #{httpsPlayPath,jdbcType=VARCHAR},
            `record_path` = #{recordPath,jdbcType=VARCHAR},
            `duration` = #{duration,jdbcType=DOUBLE},
            `size` = #{size,jdbcType=DOUBLE},
            `record_date` = #{recordDate,jdbcType=DATE},
            `course_id` = #{courseId,jdbcType=BIGINT}
        where `id` = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from recording
        <where>
            <if test="id != null">
                and `id` = #{id,jdbcType=BIGINT}
            </if>
            <if test="roomId != null">
                and `room_id` = #{roomId,jdbcType=BIGINT}
            </if>
            <if test="title != null and title != '' ">
                and `title` = #{title,jdbcType=VARCHAR}
            </if>
            <if test="playPath != null and playPath != '' ">
                and `play_path` = #{playPath,jdbcType=VARCHAR}
            </if>
            <if test="httpsPlayPath != null and httpsPlayPath != '' ">
                and `https_play_path` = #{httpsPlayPath,jdbcType=VARCHAR}
            </if>
            <if test="recordPath != null and recordPath != '' ">
                and `record_path` = #{recordPath,jdbcType=VARCHAR}
            </if>
            <if test="duration != null">
                and `duration` = #{duration,jdbcType=DOUBLE}
            </if>
            <if test="size != null">
                and `size` = #{size,jdbcType=DOUBLE}
            </if>
            <if test="recordDate != null">
                and `record_date` = #{recordDate,jdbcType=DATE}
            </if>
            <if test="courseId != null">
                and `course_id` = #{courseId,jdbcType=BIGINT}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from recording where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from recording where id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>