<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.ITeacherMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="teacherId" parameterType="cn.smart.entity.TeacherDO">
        insert into teacher
        (
       	    teacher_id, account, nick_name, first_name, 
       	    password, gender, mobile, email, 
       	    description, role, logo, create_time, 
       	    update_time, teacher_name, teacher_password, wx_qr_code
        )
        values
        (
       	    #{teacherId,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, 
       	    #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
       	    #{description,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{logo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
       	    #{updateTime,jdbcType=TIMESTAMP}, #{teacherName,jdbcType=VARCHAR}, #{teacherPassword,jdbcType=VARCHAR}, #{wxQrCode,jdbcType=VARCHAR}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.TeacherDO">
        select
                teacher_id, account, nick_name, first_name, 
                password, gender, mobile, email, 
                description, role, logo, create_time, 
                update_time, teacher_name, teacher_password, wx_qr_code
        from teacher
        where teacher_id = #{teacherId,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.TeacherDO"
        parameterType="cn.smart.condition.TeacherQueryCondition">
        select
       	    teacher_id, account, nick_name, first_name, 
       	    password, gender, mobile, email, 
       	    description, role, logo, create_time, 
       	    update_time, teacher_name, teacher_password, wx_qr_code
        from teacher
        <where>
            <if test="teacherId != null">
                and teacher_id = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="account != null and account != '' ">
                and account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null and nickName != '' ">
                and nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="firstName != null and firstName != '' ">
                and first_name = #{firstName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and gender = #{gender,jdbcType=INTEGER}
            </if>
            <if test="mobile != null and mobile != '' ">
                and mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="description != null and description != '' ">
                and description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="role != null">
                and role = #{role,jdbcType=INTEGER}
            </if>
            <if test="logo != null and logo != '' ">
                and logo = #{logo,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="teacherName != null and teacherName != '' ">
                and teacher_name = #{teacherName,jdbcType=VARCHAR}
            </if>
            <if test="teacherPassword != null and teacherPassword != '' ">
                and teacher_password = #{teacherPassword,jdbcType=VARCHAR}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by teacher_id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.TeacherQueryCondition">
        select count(1) as total from teacher
        <where>
            <if test="teacherId != null">
                and teacher_id = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="account != null and account != '' ">
                and account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null and nickName != '' ">
                and nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="firstName != null and firstName != '' ">
                and first_name = #{firstName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and gender = #{gender,jdbcType=INTEGER}
            </if>
            <if test="mobile != null and mobile != '' ">
                and mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="description != null and description != '' ">
                and description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="role != null">
                and role = #{role,jdbcType=INTEGER}
            </if>
            <if test="logo != null and logo != '' ">
                and logo = #{logo,jdbcType=VARCHAR}
            </if>
            <if test="teacherName != null and teacherName != '' ">
                and teacher_name = #{teacherName,jdbcType=VARCHAR}
            </if>
            <if test="teacherPassword != null and teacherPassword != '' ">
                and teacher_password = #{teacherPassword,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from teacher
    </select>

    <update id="update" parameterType="cn.smart.entity.TeacherDO">
        update teacher
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="firstName != null">
                first_name = #{firstName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="logo != null">
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="teacherPassword != null">
                teacher_password = #{teacherPassword,jdbcType=VARCHAR},
            </if>
            <if test="wxQrCode != null">
                wx_qr_code = #{wxQrCode,jdbcType=VARCHAR}
            </if>
        </set>
        where teacher_id = #{teacherId,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from teacher
        <where>
            <if test="teacherId != null">
                and teacher_id = #{teacherId,jdbcType=BIGINT}
            </if>
            <if test="account != null and account != '' ">
                and account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null and nickName != '' ">
                and nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="firstName != null and firstName != '' ">
                and first_name = #{firstName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                and gender = #{gender,jdbcType=INTEGER}
            </if>
            <if test="mobile != null and mobile != '' ">
                and mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="description != null and description != '' ">
                and description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="role != null">
                and role = #{role,jdbcType=INTEGER}
            </if>
            <if test="logo != null and logo != '' ">
                and logo = #{logo,jdbcType=VARCHAR}
            </if>
            <if test="teacherName != null and teacherName != '' ">
                and teacher_name = #{teacherName,jdbcType=VARCHAR}
            </if>
            <if test="teacherPassword != null and teacherPassword != '' ">
                and teacher_password = #{teacherPassword,jdbcType=VARCHAR}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from teacher where teacher_id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from teacher where teacher_id = #{teacherId,jdbcType=BIGINT}
    </delete>
</mapper>