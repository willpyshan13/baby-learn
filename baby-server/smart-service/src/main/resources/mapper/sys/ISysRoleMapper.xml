<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.ISysRoleMapper">

    <insert id="saveRoleMenuBatch" parameterType="List">
        INSERT INTO sys_role_menu (role_id, menu_id) VALUES
        <foreach collection="list" item="item" index="index" open="" separator="," close="">
            (#{item.roleId,jdbcType=BIGINT}, #{item.menuId,jdbcType=BIGINT})
        </foreach>
    </insert>

    <insert id="saveSysUserRole" parameterType="cn.smart.entity.SysUserRoleDO">
        INSERT INTO sys_user_role (user_id, role_id) VALUE (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT})
    </insert>

    <update id="deleteSysUserRole" parameterType="cn.smart.entity.SysUserRoleDO">
        DELETE FROM sys_user_role WHERE user_id = #{userId,jdbcType=BIGINT}
    </update>

    <update id="deleteSysRoleMenu" parameterType="cn.smart.entity.SysRoleMenuDO">
        DELETE FROM sys_role_menu WHERE role_id = #{roleId,jdbcType=BIGINT}
    </update>

    <insert id="save" useGeneratedKeys="true" keyProperty="roleId" parameterType="cn.smart.entity.SysRoleDO">
        insert into sys_role
        (
       	    `role_id`, `role_name`, `remark`, `dept_id`, 
       	    `create_time`
        )
        values
        (
       	    #{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{deptId,jdbcType=BIGINT}, 
       	    #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.SysRoleDO">
        select
                `role_id`, `role_name`, `remark`, `dept_id`, 
                `create_time`
        from sys_role
        where role_id = #{roleId,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.SysRoleDO"
        parameterType="cn.smart.condition.SysRoleQueryCondition">
        select
       	    `role_id`, `role_name`, `remark`, `dept_id`, 
       	    `create_time`
        from sys_role
        <where>
            <if test="roleId != null">
                and `role_id` = #{roleId,jdbcType=BIGINT}
            </if>
            <if test="roleName != null and roleName != '' ">
                and `role_name` = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="remark != null and remark != '' ">
                and `remark` = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null">
                and `dept_id` = #{deptId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by role_id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.SysRoleQueryCondition">
        select count(1) as total from sys_role
        <where>
            <if test="roleId != null">
                and `role_id` = #{roleId,jdbcType=BIGINT}
            </if>
            <if test="roleName != null and roleName != '' ">
                and `role_name` = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="remark != null and remark != '' ">
                and `remark` = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null">
                and `dept_id` = #{deptId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from sys_role
    </select>

    <update id="update" parameterType="cn.smart.entity.SysRoleDO">
        update sys_role
        <set>
            <if test="roleName != null">
                `role_name` = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                `remark` = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                `dept_id` = #{deptId,jdbcType=BIGINT},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from sys_role
        <where>
            <if test="roleId != null">
                and `role_id` = #{roleId,jdbcType=BIGINT}
            </if>
            <if test="roleName != null and roleName != '' ">
                and `role_name` = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="remark != null and remark != '' ">
                and `remark` = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null">
                and `dept_id` = #{deptId,jdbcType=BIGINT}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from sys_role where role_id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from sys_role where role_id = #{roleId,jdbcType=BIGINT};
        delete from sys_role_menu where role_id = #{roleId,jdbcType=BIGINT}
        delete from sys_user_role where role_id = #{roleId,jdbcType=BIGINT}
    </delete>
</mapper>