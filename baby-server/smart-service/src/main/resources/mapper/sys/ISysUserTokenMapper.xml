<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.ISysUserTokenMapper">

    <select id="queryByUserId" resultType="cn.smart.entity.SysUserTokenDO">
        select
            user_id, token, expire_time, update_time
        from sys_user_token where user_id = #{value}
    </select>


    <select id="queryByToken" resultType="cn.smart.entity.SysUserTokenDO">
        select
            user_id, token, expire_time, update_time
        from sys_user_token where token = #{value}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="userId" parameterType="cn.smart.entity.SysUserTokenDO">
        insert into sys_user_token
        (
       	    user_id, token, expire_time, update_time
        )
        values
        (
       	    #{userId,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR}, #{expireTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.SysUserTokenDO">
        select
                user_id, token, expire_time, update_time
        from sys_user_token
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.SysUserTokenDO"
        parameterType="cn.smart.condition.SysUserTokenQueryCondition">
        select
       	    user_id, token, expire_time, update_time
        from sys_user_token
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="token != null and token != '' ">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expireTime != null">
                and expire_time = #{expireTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by user_id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.SysUserTokenQueryCondition">
        select count(1) as total from sys_user_token
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="token != null and token != '' ">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expireTime != null">
                and expire_time = #{expireTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from sys_user_token
    </select>

    <update id="update" parameterType="cn.smart.entity.SysUserTokenDO">
        update sys_user_token
        <set>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from sys_user_token
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="token != null and token != '' ">
                and token = #{token,jdbcType=VARCHAR}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from sys_user_token where user_id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from sys_user_token where user_id = #{userId,jdbcType=BIGINT}
    </delete>
</mapper>