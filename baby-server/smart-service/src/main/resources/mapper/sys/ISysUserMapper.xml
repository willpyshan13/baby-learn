<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smart.dao.ISysUserMapper">

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        select distinct rm.menu_id from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        LEFT JOIN sys_menu m ON m.menu_id = rm.menu_id
        <where>
            <if test="userId != null">
                and ur.user_id = #{userId}
            </if>
            <if test="type != null and type != ''">
                and m.type = #{type}
            </if>
            <if test="roleId != null and roleId !=''">
                and rm.role_id = #{roleId}
            </if>
        </where>
    </select>

    <select id="queryByUserName" resultType="cn.smart.entity.SysUserDO">
        select
        user_id, user_name, password, salt,
        email, mobile, status, dept_id,
        create_time
        from sys_user where user_name = #{username}
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="cn.smart.entity.SysMenuDO">
        select m.menu_id, m.parent_id, m.name, m.url,
            m.perms, m.type, m.icon, m.order_num
        from sys_user_role ur
        LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
        LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
        where ur.user_id = #{userId}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="userId" parameterType="cn.smart.entity.SysUserDO">
        insert into sys_user
        (
       	    user_id, user_name, password, salt, 
       	    email, mobile, status, avatar, 
       	    dept_id, create_time
        )
        values
        (
       	    #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
       	    #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{avatar,jdbcType=VARCHAR}, 
       	    #{deptId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryById" parameterType="Long" resultType="cn.smart.entity.SysUserDO">
        select
                user_id, user_name, password, salt, 
                email, mobile, status, avatar, 
                dept_id, create_time
        from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="queryList" resultType="cn.smart.entity.SysUserDO"
        parameterType="cn.smart.condition.SysUserQueryCondition">
        select
        su.user_id, su.user_name, su.password, su.salt,
        su.email, su.mobile, su.status, su.avatar,
        su.dept_id, su.create_time, sur.role_id, sr.role_name
        from sys_user su
        LEFT JOIN sys_user_role sur on sur.user_id = su.user_id
        LEFT JOIN sys_role sr on sr.role_id = sur.role_id
        <where>
            <if test="userId != null">
                and su.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != '' ">
                and su.user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and su.password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="salt != null and salt != '' ">
                and su.salt = #{salt,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and su.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile != '' ">
                and su.mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and su.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="roleId != null">
                and sr.role_id = #{roleId, jdbcType=BIGINT}
            </if>
            <if test="roleName != null">
                and sr.role_name like concat('%',#{roleName},'%')
            </if>
        </where>
        <choose>
            <when test="orderField != null and orderField.trim() != ''">
                order by ${orderField} ${order}
            </when>
            <otherwise>
                order by user_id desc
            </otherwise>
        </choose>
        <if test="offset != null and offset >= 0 and limit != null and limit gt 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int"
        parameterType="cn.smart.condition.SysUserQueryCondition">
        select count(1) as total from sys_user su
        <where>
            <if test="userId != null">
                and su.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != '' ">
                and su.user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and su.password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="salt != null and salt != '' ">
                and su.salt = #{salt,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and su.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile != '' ">
                and su.mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and su.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="roleId != null">
                and sr.role_id = #{roleId, jdbcType=BIGINT}
            </if>
            <if test="roleName != null">
                and sr.role_name like concat('%',#{roleName},'%')
            </if>
        </where>
    </select>

    <select id="total" resultType="int">
        select count(1) as total from sys_user
    </select>

    <update id="update" parameterType="cn.smart.entity.SysUserDO">
        update sys_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=BIGINT},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        delete from sys_user
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != '' ">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != '' ">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="salt != null and salt != '' ">
                and salt = #{salt,jdbcType=VARCHAR}
            </if>
            <if test="email != null and email != '' ">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile != '' ">
                and mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=TINYINT}
            </if>
            <if test="avatar != null and avatar != '' ">
                and avatar = #{avatar,jdbcType=VARCHAR}
            </if>
            <if test="deptId != null">
                and dept_id = #{deptId,jdbcType=BIGINT}
            </if>
        </where>
    </delete>

    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>


    <delete id="deleteById" parameterType="Long">
        delete from sys_user where user_id = #{userId,jdbcType=BIGINT}
    </delete>
</mapper>